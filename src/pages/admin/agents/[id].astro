---
import Layout from "@/layouts/Layout.astro"
import { AgentService } from "@/lib/services/agent"
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table"
import { Badge } from "@/components/ui/badge"

const { API_TOKEN, DB, INCENTIVE_DB } = Astro.locals.runtime.env
const { id } = Astro.params

const agentService = new AgentService(INCENTIVE_DB as D1Database) // Use INCENTIVE_DB instead of DB
const agent = await agentService.getById(id as string)

if (!agent) {
  return Astro.redirect("/admin/agents")
}

// Helper function to format role display
const formatRole = (role: string) => {
  switch (role) {
    case "agent":
      return "Agent"
    case "hotel_admin":
      return "Hotel Admin"
    case "regional_admin":
      return "Regional Admin"
    case "global_admin":
      return "Global Admin"
    default:
      return role
  }
}

// Helper function to get role color
const getRoleColor = (role: string) => {
  switch (role) {
    case "agent":
      return "default"
    case "hotel_admin":
      return "secondary"
    case "regional_admin":
      return "outline"
    case "global_admin":
      return "destructive"
    default:
      return "default"
  }
}
---

<Layout title={`${agent.first_name} ${agent.last_name}` || agent.email}>
  <h2 class='text-xl font-bold tracking-tight'>Agent Details</h2>

  <div class='space-y-6'>
    <!-- Basic Information -->
    <div class='rounded-lg border p-6'>
      <h3 class='text-lg font-semibold mb-4'>Basic Information</h3>
      <Table>
        <TableBody>
          <TableRow>
            <TableCell className='font-medium'>ID</TableCell>
            <TableCell>{agent.id}</TableCell>
          </TableRow>
          <TableRow>
            <TableCell className='font-medium'>Email</TableCell>
            <TableCell>{agent.email}</TableCell>
          </TableRow>
          <TableRow>
            <TableCell className='font-medium'>First Name</TableCell>
            <TableCell>{agent.first_name || "N/A"}</TableCell>
          </TableRow>
          <TableRow>
            <TableCell className='font-medium'>Last Name</TableCell>
            <TableCell>{agent.last_name || "N/A"}</TableCell>
          </TableRow>
          <TableRow>
            <TableCell className='font-medium'>Telephone</TableCell>
            <TableCell>{agent.telephone || "N/A"}</TableCell>
          </TableRow>
          <TableRow>
            <TableCell className='font-medium'>Role</TableCell>
            <TableCell>
              <Badge variant={getRoleColor(agent.role)}>
                {formatRole(agent.role)}
              </Badge>
            </TableCell>
          </TableRow>
          <TableRow>
            <TableCell className='font-medium'>Created At</TableCell>
            <TableCell>{new Date(agent.created_at).toLocaleString()}</TableCell>
          </TableRow>
          <TableRow>
            <TableCell className='font-medium'>Updated At</TableCell>
            <TableCell>{new Date(agent.updated_at).toLocaleString()}</TableCell>
          </TableRow>
        </TableBody>
      </Table>
    </div>

    <!-- Agency Information -->
    {
      agent.agency && (
        <div class='rounded-lg border p-6'>
          <h3 class='text-lg font-semibold mb-4'>Agency Information</h3>
          <Table>
            <TableBody>
              <TableRow>
                <TableCell className='font-medium'>Agency ID</TableCell>
                <TableCell>{agent.agency.id}</TableCell>
              </TableRow>
              <TableRow>
                <TableCell className='font-medium'>Agency Name</TableCell>
                <TableCell>{agent.agency.name}</TableCell>
              </TableRow>
              <TableRow>
                <TableCell className='font-medium'>Agency Code</TableCell>
                <TableCell>
                  <Badge variant='outline'>{agent.agency.code}</Badge>
                </TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </div>
      )
    }

    {
      !agent.agency && agent.agency_id && (
        <div class='rounded-lg border border-yellow-200 bg-yellow-50 p-6'>
          <h3 class='text-lg font-semibold mb-2 text-yellow-800'>
            Agency Information
          </h3>
          <p class='text-yellow-700'>
            Agency ID: {agent.agency_id} (Agency details not found)
          </p>
        </div>
      )
    }
  </div>

  <div slot='actions'>
    <div class='flex gap-2'>
      <a
        href={`/admin/agents/${id}/edit`}
        class='inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2'
      >
        Edit Agent
      </a>
      <a
        href='/admin/agents'
        class='inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2'
      >
        Back to Agents
      </a>
    </div>
  </div>
</Layout>
